.. _specs-required:

SLSv2 Required Components
=========================

This page describes the two **required** components of the service layout specification:

* :ref:`slsv2-service-layout`
* :ref:`slsv2-package-layout`

.. _slsv2-service-layout:

SLSv2 Service Layout
--------------------

These components are **required** by SLSv2. :

* A ``service`` directory which contains all immutable files that do not change between
  product installations. This includes binaries, libraries, and static resources.
  This can also be symlink to such a directory.

* A ``deployment`` directory which contains a file named ``manifest.yml`` or ``manifest.yaml``.
  ``.yml`` is the recommended extension. Either extension is acceptable, but only one of the files may exist.
  This file contains the name of the product, the version of the product, and the version
  of the manifest itself. It has this syntax::

    manifestVersion: version of the manifest, for example: 1.0.0-alpha
    productName: name of the product, for example: slate
    productVersion: version of the product, for example: 0.35.0

  The ``deployment`` directory itself is a sibling of the ``service`` and ``var``
  directories. A product must not depend on any resources in the ``deployment`` directory,
  as users may not install the product using deployment tools, in which case the ``deployment``
  directory is not guaranteed to be extracted with the product.

* An init script at the path ``service/bin/init.sh`` which supports the ``start``,
  ``stop``, and ``status`` commands. These commands should behave in accordance with the
  `Linux Standard Base`_ specification, of which they are a subset. When Skylab calls the
  init script, it sets the current directory and the ``SERVICE_HOME`` environment variable
  to the top-level directory of your service, i.e., the parent directory of both the
  ``service`` and ``deployment`` directories. There is more info about writing robust init
  scripts in :ref:`For Developers <required-tasks-slsv2>`.

The components below are **suggested** by the SLSv2 service layout. If you include these
directories in your product's layout, then your product won't need additional configuration
to integrate with deployment tooling that relies on them:

* A ``var`` directory which contains all service-specific
  files. This includes configuration files, PID files, and log files.
  This directory is a sibling of the ``service`` directory. If ``service``
  is a symlink to the directory with your product's immutable files, then ``var`` is
  a sibling of the symlink, not of the directory to which the symlink points. When Skylab
  upgrades an SLSv2 service, *new* files in ``var`` (which did not exist in the old version
  of the service) will be copied into the service's ``var`` directory while *existing*
  files *will not* be overwritten by the upgrade.

* A ``var/log`` directory which contains log files
* A ``var/conf`` directory which contains configuration files
* A ``var/data`` directory which contains files that a service instantiating your product will edit
* A ``var/data/tmp`` directory can be used for any temporary files that the product may use

The components below are **reserved** by the SLSv2 service layout. If you include these
directories in your product's layout, recognize that they might be modified in the process of deployment.

* A ``var/security`` directory which contains certificates and security stores
* A ``var/tmp`` directory which is used as temporary storage for intermediate forms of files generated by skylab

Below is the directory structure that results from including both the required and suggested
components of the service layout::

  service/
    bin/
      init.sh
  var/
    log/
    conf/
    data/
  deployment/
    manifest.yml | manifest.yaml

Note that the service's binaries are *not* included in this directory tree. Instead, they are
stored in a separate ``.binaries`` directory, the default path of which is
``/opt/palantir/.binaries``. This allows multiple services to share the same binaries.

.. _Linux Standard Base: http://refspecs.linuxbase.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/iniscrptact.html

.. _slsv2-package-layout:

SLSv2 Package Layout
--------------------

The deployment package must be a gzip-compressed tar archive with the file name
``<PRODUCT_NAME>-<PRODUCT_VERSION>``, and either the ``.tgz`` or the ``.tar.gz`` extension.

The package must contain a single top-level directory which *should* have a user-readable name,
such as ``<PRODUCT_NAME>-<PRODUCT_VERSION>``. This directory must contain the ``service`` and
``deployment`` directories, and also contains the optional ``var`` directory if it exists.

Below are the contents of a deployment package that includes all three directories::

  <PRODUCT_NAME>-<PRODUCT_VERSION>/
    service/
    var/
    deployment/

The archive *must not* have a top-level ``.`` directory::

  $ tar -tf very-bad-1.0.0.tgz
    ./
    ./very-bad-1.0.0/
    ./very-bad-1.0.0/service/
    #...
  $ tar -tf very-good-1.0.0.tgz
    very-good-1.0.0/
    very-good-1.0.0/service/
    #...
